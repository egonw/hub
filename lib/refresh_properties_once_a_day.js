// The goal of this module is to update the two following objects once a day
// It relies on NodeJS module caching system: updating those objects here
// will also update those objects in other modules
const properties = require('./properties')
const propertiesIndex = require('./properties_index')

const oneDay = 24 * 60 * 60 * 1000
const logger = require('./logger')
const spawn = require('./spawn')
const fs = require('fs')
const readFileAsync = path => {
  return new Promise((resolve, reject) => {
    fs.readFile(path, (err, data) => {
      if (err) reject(err)
      else resolve(data)
    })
  })
}

const refreshProperties = () => {
  logger.info('Starting to refresh properties objects')
  return spawn('npm', [ 'run', 'update-properties' ])
  .then(res => {
    if (res.stderr !== '') {
      console.error(res.stderr)
    } else {
      Promise.all([
        refreshObject('lib/properties.js', properties),
        refreshObject('lib/properties_index.js', propertiesIndex)
      ])
      .then(() => logger.success('properties object refreshed'))
    }
  })
  .catch(console.error)
}

const refreshObject = (path, obj) => {
  return readFileAsync(path)
  .then(jsonifyJsFile)
  .then(json => Object.assign(obj, JSON.parse(json)))
}

// Remove the 2 first line of a js file on the pattern
// to recover a valid JSON string
//   ```
//   // Generated by scripts/foo
//   module.exports = {
//   ```
const jsonifyJsFile = jsFile => {
  return '{' + jsFile.toString().split('\n').slice(2).join('\n')
}

module.exports = () => {
  setInterval(refreshProperties, oneDay)
  logger.info(`Set to refresh properties every ${oneDay} ms`)
}
