#!/usr/bin/env node
const fs = require('fs')
const properties = require('../lib/properties')
var index = {}

const indexPropertyByLabel = property => {
  const label = properties[property].label
    // Drop the generic part in external id properties labels
    // ex: 'VIAF ID' => 'VIAF'
    .replace(/\s*(ID|code|number|identifier)$/i, '')
    .replace(/\s(of|a|the|in|or|for|index)\s/, ' ')
    .toLowerCase()
    .trim()

  if (label.length === 0) return

  label
  .split(' ')
  .filter(part => /^[a-z].*[^)]{1}$/.test(part))
  .forEach(indexWord.bind(null, property))
}

const indexPropertyByAliases = property => {
  properties[property].aliases
  .split('\n')
  .forEach(alias => {
    // Only index one-word aliases as that's the most suseptible
    // to be good prefixes
    // ex: for P244, index 'loc', not 'Library of Congress Control Number'
    if (/^\w+$/.test(alias)) {
      indexWord(property, alias.toLowerCase())
    }
  })
}

const indexWord = (property, word) => {
  if (word.length === 0 || word.length > 15) return
  index[word] = index[word] || []
  if (!index[word].includes(property)) index[word].push(property)
}

for (let property in properties) {
  const { type, authority } = properties[property]
  if (type === 'ExternalId' || (type === 'String' && authority)) {
    indexPropertyByLabel(property)
    indexPropertyByAliases(property)
  }
}

const file = `// Generated by scripts/generate_properties_index
module.exports = ${JSON.stringify(index, null, 2)}`

fs.writeFileSync('./lib/properties_index.js', file)
