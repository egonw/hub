#!/usr/bin/env node
global.Promise = require('bluebird')
const fs = require('fs')
const properties = require('../lib/properties')
var index = {}
const { isUrlifyableProperty, randomDelay, formatLabel, getIconUrl } = require('../lib/links_data_helpers')
const keyBy = require('lodash.keyby')

const promises = Object.values(properties)
  .filter(isUrlifyableProperty)
  .map(propertyData => {
    var { property, label, logo, urlFormat } = propertyData
    label = formatLabel(label)
    return Promise.resolve()
    // Spreading calls on a some seconds
    .delay(randomDelay())
    .then(() => getIconUrl(logo))
    .then(icon => {
      propertyData.icon = icon
      return { property, label, icon, urlFormat }
    })
  })

Promise.all(promises)
.then(propertiesData => {
  const index = keyBy(propertiesData, 'property')
  const json = JSON.stringify(index, null, 2)
  const file = `// Generated by scripts/generate_links_data\nmodule.exports = ${json}`
  fs.writeFileSync('./lib/properties_links_data.js', file)
})
